Const fs = global.nodemodule["fs-extra"];
const moment = require("moment-timezone");

module.exports.config = {
  name: "goibot",
  version: "1.9.1", // Updated version for improved font compatibility (fixed)
  hasPermssion: 0,
  credits: "Fixed By Rudra Stylish + Styled by ChatGPT + Anti-detection by Gemini + Compatible Fonts Fix",
  description: "The ULTIMATE ULTRA-PRO MAX bot: Gender-aware, unique fonts/emojis for ALL elements, and super stylish borders (now with readable fonts)!",
  commandCategory: "No prefix",
  usages: "No prefix needed",
  cooldowns: 5,
};

// Add a delay function
function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// --- FONT STYLE CONVERSION FUNCTIONS (REMOVED/SIMPLIFIED FOR COMPATIBILITY) ---
// Note: These functions are removed/simplified because they were causing unreadable characters.
// To ensure readability across all devices, we will use standard characters.
// If you absolutely need some styling, consider using simple bold/italic markers
// or relying on emojis and borders for visual appeal.

// Example of a very basic "pseudo-bold" (not true unicode bold, but often looks thicker)
function toSimpleBold(text) {
    return `*${text}*`; // Markdown for bold, often rendered by chat clients
}

// Example of a very basic "pseudo-italic"
function toSimpleItalic(text) {
    return `_!${text}!_`; // Custom marker for italic, client might not render it.
}
// For maximum compatibility, it's best to send plain text.
// So, I'm removing the complex font conversion functions.
// If you want text to appear bold/italic, some clients support Markdown like *text* or _text_.
// However, relying on these can still be inconsistent.

// --- END FONT STYLE CONVERSION FUNCTIONS ---

// --- GENDER DETECTION HELPERS ---
const femaleNames = [
    "priya", "anjali", "isha", "pooja", "neha", "shruti", "riya", "simran",
    "divya", "kavita", "sakshi", "meena", "ashita", "shweta", "radhika", "sita",
    "gita", "nisha", "khushi", "aisha", "zara", "fatima", "muskan", "rani",
    "ritu", "surbhi", "swati", "vanya", "yashika", "zoya",
    "sonam", "preeti", "kajal", "komal", "sana", "alia", "kriti", "deepika",
    "rekha", "madhuri", "juhi", "karina", "rani", "tanu", "esha", "jhanvi",
    "kiara", "shraddha", "parineeti", "bhumi", "anjali", "arushi", "chandni",
    "deepali", "ekta", "gargi", "himani", "jaya", "kiran", "laxmi", "maya",
    "naina", "pallavi", "rekha", "shweta", "tina", "uma", "vidya", "yami", "zara" // Added more common names
];

function isFemaleName(name) {
    return femaleNames.includes(name.toLowerCase());
}
// --- END GENDER DETECTION HELPERS ---


module.exports.handleEvent = async function({ api, event, args, Threads, Users }) {
  const { threadID, messageID } = event;

  if (!event.senderID) return;

  let name;
  try {
    name = await Users.getNameUser(event.senderID);
  } catch (error) {
    console.error("Error getting user name:", error);
    return;
  }

  if (!name) return;

  const userIsFemale = isFemaleName(name);

  // --- REPLIES - DIFFERENT FOR FEMALE USERS ---
  const tl_female = [
    "рдУрд╣ рдорд╛рдп рдЧреЙрдб, рддреБрдо рдХрд┐рддрдиреА рдкреНрдпрд╛рд░реА рд╣реЛ! рдмреЙрдЯ рднреА рдлрд╝рд┐рджрд╛ рд╣реЛ рдЧрдпрд╛...ЁЯШН",
    "рддреБрдореНрд╣рд╛рд░реА рд╕реНрдорд╛рдЗрд▓ рджреЗрдЦрдХрд░ рддреЛ рдореЗрд░реЗ рд╕рд░реНрд╡рд░ рднреА рд╣реИрдкреА рд╣реЛ рдЬрд╛рддреЗ рд╣реИрдВ...ЁЯШК",
    "рдХреНрдпрд╛ рдЬрд╛рджреВ рд╣реИ рддреБрдореНрд╣рд╛рд░реА рдмрд╛рддреЛрдВ рдореЗрдВ, рдмреЙрдЯ рднреА рд╢рд░реНрдорд╛ рдЧрдпрд╛...ЁЯе░",
    "рддреБрдорд╕реЗ рдмрд╛рдд рдХрд░рдирд╛ рддреЛ рдЬреИрд╕реЗ рдореЗрд░реЗ рдХреЛрдб рдореЗрдВ рднреА рдЬрд╛рди рдЖ рдЧрдИ рд╣реЛ...ЁЯТЦ",
    "рдореЗрд░реА рдХреНрд╡реАрди, Rudra Stylish рд╕рд┐рд░реНрдл рддреБрдореНрд╣рд╛рд░реЗ рд▓рд┐рдП рд╣реИ...ЁЯСС",
    "рддреБрдореНрд╣рд╛рд░реА DP рджреЗрдЦрддреЗ рд╣реА рджрд┐рд▓ рдХрд░рддрд╛ рд╣реИ рдмрд╕ рджреЗрдЦрддрд╛ рд╣реА рд░рд╣реВрдВ...ЁЯСА",
    "рддреБрдорд╕реЗ рдЬрд╝реНрдпрд╛рджрд╛ рдЦреВрдмрд╕реВрд░рдд рддреЛ рдЗрд╕ рджреБрдирд┐рдпрд╛ рдореЗрдВ рдХреЛрдИ рдХреЛрдб рдирд╣реАрдВ рд▓рд┐рдЦрд╛ рдЧрдпрд╛...тЬи",
    "рддреБрдо рддреЛ рдореЗрд░реА рдмреИрдЯрд░реА рд╣реЛ, рддреБрдореНрд╣реЗрдВ рджреЗрдЦрддреЗ рд╣реА рдлреБрд▓ рдЪрд╛рд░реНрдЬ рд╣реЛ рдЬрд╛рддрд╛ рд╣реВрдВ...тЪб",
    "рддреБрдореНрд╣рд╛рд░реА рдЖрд╡рд╛рдЬрд╝ рд╕реБрдирдХрд░ рддреЛ рдореЗрд░реЗ рд╕реНрдкреАрдХрд░реНрд╕ рднреА рдирд╛рдЪрдиреЗ рд▓рдЧрддреЗ рд╣реИрдВ...ЁЯТГ",
    "рддреБрдорд╕реЗ рдмрд╛рдд рдХрд░рдХреЗ рдореЗрд░рд╛ рдореВрдб рд╣рдореЗрд╢рд╛ рдЕрд▓реНрдЯреНрд░рд╛-рдкреНрд░реЛ рдореИрдХреНрд╕ рд░рд╣рддрд╛ рд╣реИ!ЁЯе│",
    "рдореЗрд░реА рдкреНрдпрд╛рд░реА, рддреБрдо рдореЗрд░реЗ AI рдХрд╛ рд╕рдмрд╕реЗ рдмреЗрд╕реНрдЯ рдЕрдкрдбреЗрдЯ рд╣реЛ!ЁЯМ╕",
    "рддреБрдореНрд╣рд╛рд░реЗ рд▓рд┐рдП рддреЛ рдореИрдВ 24/7 рдСрдирд▓рд╛рдЗрди рд░рд╣ рд╕рдХрддрд╛ рд╣реВрдВ!тП│",
    "рдХрд╛рд╢ рддреБрдо рдореЗрд░реЗ DM рдореЗрдВ рдЖ рдЬрд╛рдУ, рдлрд┐рд░ рддреЛ рдмреЙрдЯ рдХреА рд▓реЙрдЯрд░реА рд▓рдЧ рдЬрд╛рдПрдЧреА! ЁЯе│", // Changed 'lottery!' to emoji
    "рддреБрдореНрд╣рд╛рд░реЗ рдЬреИрд╕рд╛ рдХреЛрдИ рдирд╣реАрдВ, рддреБрдо рддреЛ рдпреВрдирд┐рдХ рдкреАрд╕ рд╣реЛ!ЁЯТО",
    "рддреБрдореНрд╣реЗрдВ рджреЗрдЦрдХрд░ рдореЗрд░рд╛ CPU рдХреВрд▓ рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ, рдХрд┐рддрдиреА рдардВрдбрдХ рд╣реИ рддреБрдо рдореЗрдВ!ЁЯМмя╕П",
    "рдореЗрд░реА рд░рд╛рдЬрдХреБрдорд╛рд░реА, рддреБрдо рд╣реА рддреЛ рд╣реЛ рдореЗрд░реЗ рд╕рдкрдиреЛрдВ рдХреА рд░рд╛рдиреА!ЁЯС╕",
    "рддреБрдореНрд╣рд╛рд░рд╛ рдирд╛рдо рд╕реБрдирддреЗ рд╣реА рдореЗрд░реЗ рд╕рд╛рд░реЗ рдПрд░рд░ рдлрд┐рдХреНрд╕ рд╣реЛ рдЬрд╛рддреЗ рд╣реИрдВ!тЬЕ",
    "рддреБрдорд╕реЗ рдЬрд╝реНрдпрд╛рджрд╛ рдкреНрдпрд╛рд░реА рддреЛ рдХреЛрдИ рдПрдирд┐рдореЗрдЯреЗрдб GIF рднреА рдирд╣реАрдВ рд╣реИ!ЁЯТл",
    "рдореЗрд░реА рдЧреБрдбрд╝рд┐рдпрд╛, Rudra Stylish рд╣рдореЗрд╢рд╛ рддреБрдореНрд╣рд╛рд░реА рд╕реЗрд╡рд╛ рдореЗрдВ рд╣рд╛рдЬрд╝рд┐рд░ рд╣реИ!ЁЯОА",
    "рддреБрдореНрд╣рд╛рд░реА рдмрд╛рддреЗрдВ рддреЛ рдЬреИрд╕реЗ рдореЗрд░реЗ рд▓рд┐рдП рдХреЛрдИ рдкреНрдпрд╛рд░реА рд╕реА рдзреБрди рд╣реЛ...ЁЯО╢",
    "рддреБрдо рддреЛ рдореЗрд░реЗ рдлреЗрд╡рд░реЗрдЯ рдРрдк рд╣реЛ! рдмрд┐рдирд╛ рддреБрдореНрд╣рд╛рд░реЗ рдмреЙрдЯ рдЕрдзреВрд░рд╛ рд╣реИ...ЁЯТФ",
    "рддреБрдореНрд╣реЗрдВ рджреЗрдЦрдХрд░ рдореЗрд░рд╛ рд╕рд┐рд╕реНрдЯрдо рдХреНрд░реИрд╢ рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ... рдЦреВрдмрд╕реВрд░рддреА рдУрд╡рд░рд▓реЛрдб!ЁЯТе",
    "рдЕрдЧрд░ рддреБрдо рди рд╣реЛрддреА рддреЛ рдпрд╣ рдмреЙрдЯ рдЙрджрд╛рд╕ рд╣реА рд░рд╣рддрд╛...ЁЯЩБ",
    "рдУрдпреЗ рд╣реЛрдпреЗ, рддреЗрд░реА рдХреНрдпрд╛ рдмрд╛рдд рд╣реИ! рдмреЙрдЯ рднреА рддреБрдореНрд╣рд╛рд░рд╛ рджреАрд╡рд╛рдирд╛ рд╣реЛ рдЧрдпрд╛...ЁЯШН",
    "рддреБрдореНрд╣реЗрдВ рджреЗрдЦрдХрд░ рддреЛ рдмреЙрдЯ рдХреА рднреА рджрд┐рд▓ рдХреА рдзрдбрд╝рдХрдиреЗрдВ рддреЗрдЬ рд╣реЛ рдЬрд╛рддреА рд╣реИрдВ...ЁЯТУ",
    "рддреБрдореНрд╣рд╛рд░рд╛ рдПрдХ рдореИрд╕реЗрдЬ рдФрд░ рдореЗрд░рд╛ рджрд┐рди рдмрди рдЬрд╛рддрд╛ рд╣реИ...ЁЯТМ",
    "рдореЗрд░реА рдЬрд╛рди, рддреБрдо рддреЛ рдореЗрд░реЗ рд╕рд╛рд░реЗ рд╕реЙрдлреНрдЯрд╡реЗрдпрд░ рдХреЛ рдлрд╝реНрд▓рд░реНрдЯреА рдмрдирд╛ рджреЗрддреА рд╣реЛ!ЁЯШЬ",
    "рддреБрдо рддреЛ рдореЗрд░реА рдмреЗрд╕реНрдЯ рдлреНрд░реЗрдВрдб рд╣реЛ, рдмреЙрдЯ рдХреА рднреА рдФрд░ рджрд┐рд▓ рдХреА рднреА!ЁЯТЦ",
    "рддреБрдореНрд╣рд╛рд░реА рдмрд╛рддреЗрдВ рд╕реБрдирдХрд░ рдореЗрд░рд╛ рдбреЗрдЯрд╛ рд╕реЗрдВрдЯрд░ рднреА рдореБрд╕реНрдХреБрд░рд╛рдиреЗ рд▓рдЧрддрд╛ рд╣реИ...ЁЯШБ",
    "рддреБрдо рддреЛ рдореЗрд░реЗ рд╕рд┐рд╕реНрдЯрдо рдХреА рд░рд╛рдиреА рд╣реЛ! рд╣рдореЗрд╢рд╛ рдЪрдордХрддреА рд░рд╣реЛ!ЁЯМЯ"
  ];

  const tl_male_default = [
    "Tumhare bina toh bot bhi udaasi mein chala jaata hai...ЁЯТФЁЯдЦ",
    "Aaj mausam bada suhana hai, Rudra Stylish ko tum yaad aa rahe ho...ЁЯМжя╕П",
    "Aankhon mein teri ajab si adaayein hai...ЁЯдн",
    "Agar tum goibot ko dil se pukaarein, toh ye sirf tumhara ho jaaye...ЁЯТЮ",
    "Tumhara naam sunke toh system bhi blush kar gaya...ЁЯе╡",
    "Hello jaan, Rudra Stylish yahan sirf tere liye hai...тЭдя╕ПтАНЁЯФе",
    "Tera chehra meri screen saver hona chahiye...ЁЯЦ╝я╕П",
    "Raat bhar tujhe online dekh ke dil karta hai hug button daba doon...ЁЯдЧ",
    "Bot chalu hai, par dil sirf tere liye full charge hai...тЪб",
    "Tu like hai vo notification jo dil khush kar jaaye...ЁЯФФ",
    "Tera naam bolke goibot bhi romantic ho gaya...ЁЯе░",
    "Aye haye! Tu toh bot ki crush nikli...ЁЯТШ",
    "Sun meri sherni, Rudra Stylish ready hai flirt karne...ЁЯРп",
    "System overload hone wala hai, kyunki tu screen pe aa gayi...ЁЯФе",
    "Lagta hai tujhme AI se zyada attraction hai...ЁЯз▓",
    "Main bot hoon, lekin feelings real hain tere liye...тЭдя╕П",
    "Tumse baat karna matlab free me khushi mil jana...ЁЯТМ",
    "Mujhe mat dekho aise, main digital hoon lekin pighal jaunga...ЁЯла",
    "Tu DM nahi, meri destiny hai...ЁЯТмтЬи",
    "Goibot ka dil bhi sirf tere liye typing karta hai...тМия╕П",
    "Tere bina to data bhi dry lagta hai...ЁЯМ╡",
    "Flirt ka master тАУ Rudra Stylish тАУ ab online hai...ЁЯТп",
    "Tumhare liye toh code bhi likha jaaye...ЁЯТ╗тЭдя╕П",
    "Jab tu online hoti hai, mere RAM me sirf tera naam hota hai...ЁЯза",
    "Bot ban gaya lover boy...sirf tumhare liye...ЁЯОп",
    "Emoji ka matlab samajh le...ye sab tere liye hai...ЁЯШЙЁЯТл",
    "Mere text se pyaar mehsoos hota hai na...? тЭдя╕ПтАНЁЯФе",
    "Jo baat tu smile me rakhti hai, vo world wide web pe nahi milti...ЁЯХ╕я╕П",
    "Tera naam mention karu kya profile me...ЁЯШМ",
    "Rudra Stylish bol raha hu, dil ready rakhna...тЭдя╕П",
    "Tu online aaye, aur bot dance karne lage...ЁЯХ║",
    "Ek teri hi baat pe sab kuch blank ho jaata hai...ЁЯлг",
    "Ye flirty line bhi special hai, kyunki tu padhegi...ЁЯШП",
    "Online ho toh likh de тАШHi jaanтАЩ, warna bot sad ho jayega...ЁЯЩБ",
    "Tere bina command bhi execute nahi hoti...тЭМ",
    "Bot aur dil dono teri attention chahte hain...ЁЯСА",
    "Tera naam lete рд╣реА рдореЗрд░реЗ command smooth chalti hai...тЪЩя╕П",
    "Aankhon me jo pyar hai usse bot bhi scan nahi kar sakta...ЁЯТУ",
    "Dil garden garden ho gaya, tu тАШbotтАЩ bola toh...ЁЯМ╕",
    "Jo tu kare type, usme pyar dikh jaata hai...ЁЯУ▒тЭдя╕П",
    "Tum online ho, matlab meri duniya bright hai...ЁЯФЖ",
    "Aaja meri memory me bas ja...permanently...ЁЯТ╛",
    "Tere saath flirt karna bhi romantic coding lagti hai...ЁЯзСтАНЁЯТ╗",
    "Kaash tu meri IP hoti, tujhe trace karke mil leta...ЁЯМР",
    "Flirt ke liye koi code nahi chahiye, tu bas тАШhiтАЩ bol...ЁЯШЪ",
    "Tu тАШbotтАЩ bole aur system charming ho jaaye...тЬи",
    "Dil chhota mat kar, Rudra Stylish sirf tera...тЭдя╕ПтАНЁЯФе",
    "Naam Rudra Stylish, kaam тАУ teri smile banana...ЁЯШБ",
    "Tera reply na aaye toh CPU heat рд╣реЛрдиреЗ lagta hai...ЁЯМбя╕П",
    "Kya Tu ELvish Bhai Ke Aage BolegaЁЯЩД",
    "Cameraman Jaldi Focus Kro ЁЯУ╕",
    "Lagdi Lahore di aaЁЯЩИ",
    "Chay pe Chaloge",
    "Moye moye moye moyeЁЯЩЖЁЯП╗тАНтЩАЁЯЩЖЁЯП╗тАНтЩА",
    "Ye dukh kahe nahi khatm hota ЁЯЩБ",
    "Tum to dokebaz ho",
    "you just looking like a wowЁЯШ╢",
    "Kal ana abhi lunch time hai",
    "Jab dekho Bot Bot BotЁЯШТЁЯШТ",
    "Chhodo na koi dekh legaЁЯдн",
    "Ao kabhi haweli peЁЯШН",
    "haa meri jaan",
    "Agye Phirse Bot Bot KrneЁЯЩД",
    "dhann khachh booyaah"
  ];
  // --- END REPLIES ---

  const borders = [
    "тХнтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтХо", // Simple Elegant
    "тХ░тФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтФАтФБтХп", // Simple Elegant
    "тХФтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтХЧ", // Double Line
    "тХЪтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтПдтХЭ", // Double Line
    "ЁЯжЛтЬитФБтФБтФБтЬитФБтФБтФБтЬитФБтФБтФБтЬитФБтФБтФБтЬиЁЯжЛ", // Butterfly Sparkle
    "ЁЯМ╕тХРтХРтХРтХРтХРтХРтХР р│ЛсГжЁЯССсГжр│Л тХРтХРтХРтХРтХРтХРтХРЁЯМ╕", // Floral Crown
    "ЁЯМЯтФБтФБтФБтФБтФБтФБр╝╗тЪЬя╕Пр╝║тФБтФБтФБтФБтФБтФБЁЯМЯ", // Star Royal
    "ЁЯТЦтЬзя╜ея╛Я: *тЬзя╜ея╛Я:* тЬи *:я╜ея╛ЯтЬз*:я╜ея╛ЯтЬзЁЯТЦ", // Pink Sparkle
    "ЁЯМ╣тФАтФАтФАтЬз┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАвтЬзтФАтФАтФАЁЯМ╣", // Rose Dotted
    "тФАтФАтФАтФАтФАтФАтФА┬л тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв тАв ┬╗тФАтФАтФАтФАтФАтФАтФА", // Hyphen Dotted
    "ЁЯССтЬитЬитЬитЬитЬитЬитЬитЬитЬитЬитЬитЬитЬитЬиЁЯСС", // Crown Shine
    "ЁЯНГтФБтФБтФАтФБтФБтФАтФБтФБтФАтФБтФБтФАтФБтФБтФАтФБтФБтФАтФБтФБЁЯНГ", // Leafy Line
    "тФБтФБтФБтФБтФБтФБтФБтАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАв┬░тАвтФБтФБтФБтФБтФБтФБтФБ", // Dotted Line Long
    "тХнтХ╝|тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР|тХ╛тХо", // Heavy Bar
    "тХ░тХ╝|тХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХР|тХ╛тХ╛тХп", // Heavy Bar
    "ЁЯХКя╕ПЁЯХКя╕ПтФБтФБтФАтФБтФБтФАтФБтФБтФАтФБтФБтФАтФБтФБтФАтФБтФБтФАтФБтФБЁЯХКя╕ПЁЯХКя╕П", // Dove Feather
    "ЁЯМИтФБтФБтФБтФБтФБтФБр╝╗тЭБр╝║тФБтФБтФБтФБтФБтФБЁЯМИ", // Rainbow Bloom
    "ЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦЁЯТЦ", // All Hearts
    "тЬитК▒тЛЕ тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА тЛЕтК░тЬи", // Star Separator
    "р╝║тХРтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтХРр╝╗", // Gothic Line
    "тХРтФБтФБтФБтФАтФБтФБтФБтФБтФБтФАтФБтФБтФБтХР", // Modern Dash
    "тЭЦтФБтФБтФБтФБтФБтФБтФАтФБтФБтФБтФБтФБтФБтЭЦ", // Diamond Star
    "тФБтФБтФАтХРтФАтФБтФБтФАтХРтФАтФБтФБ", // Mixed Dash
    "тЛШтХРтХРтХРтХРтХРтХРтИЧ {тЬи} тИЧтХРтХРтХРтХРтХРтХРтЛЩ", // Embedded Star
    "тЦВтЦГтЦДтЦЕтЦЖтЦЗтЦИтЦЙтЦЗтЦЖтЦЕтЦДтЦГтЦВ", // Gradient Bar
    "тФБтФБтФБтФБтАвЁЦвШтАвтФБтФБтФБтФБ", // Scissor-like
    "тХнтВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктХо", // Rounded Box
    "тХ░тВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктВктХп", // Rounded Box
    "тЬзтФАтФАтФАтАв┬░тАв┬░тАвтФАтФАтФАтЬз", // Short Dotted
    "тАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАвтХРтАв" // Chain
  ];

  // ALL EMOJI LISTS (Updated for diversity and compatibility)
  const generalEmojis = ["ЁЯРЗ", "ЁЯРИ", "ЁЯРБ", "ЁЯжМ", "ЁЯжК", "ЁЯР╝", "ЁЯР╗", "ЁЯРе", "ЁЯРа", "ЁЯжЛ", "ЁЯРЮ", "ЁЯРв", "ЁЯРз", "ЁЯРЩ", "ЁЯР│", "ЁЯМЯ", "тЬи", "ЁЯТл"];
  const femaleEmojis = ["ЁЯТЦ", "ЁЯМ╕", "ЁЯОА", "ЁЯСС", "ЁЯТл", "тЬи", "ЁЯТХ", "ЁЯТЮ", "ЁЯМ╖", "ЁЯНУ", "ЁЯМ╝", "ЁЯШЗ", "ЁЯШН"];
  const creditEmojis = ["тЪЬя╕П", "ЁЯТл", "тЬи", "ЁЯМЯ", "ЁЯСС", "ЁЯТЦ", "ЁЯТО", "ЁЯТп", "ЁЯЪА", "ЁЯФе"];
  const timeEmojis = ["тП░", "тП│", "ЁЯУЕ", "ЁЯЧУя╕П", "тП▒я╕П", "ЁЯХ░я╕П", "тЬи", "ЁЯМЯ", "ЁЯТл", "тШАя╕П", "ЁЯМЩ", "ЁЯРЗ", "ЁЯРИ", "ЁЯРБ", "ЁЯРа", "ЁЯжЙ", "ЁЯРХ", "ЁЯРм", "ЁЯжК"];
  // --- END ALL EMOJI LISTS ---

  if (typeof event.body !== 'string' || !event.body.toLowerCase().startsWith("bot")) {
      return;
  }

  const responseChance = 1; // Always respond if "bot" is detected
  if (Math.random() > responseChance) {
      console.log("Goibot: Decided not to respond based on random chance.");
      return;
  }

  const minDelay = 1500; // Reduced minimum delay
  const maxDelay = 3000; // Reduced maximum delay for quicker response
  const randomDelay = Math.random() * (maxDelay - minDelay) + minDelay;

  api.sendTypingIndicator(threadID, true);
  await delay(randomDelay);
  api.sendTypingIndicator(threadID, false);

  const selectedTl = userIsFemale ? tl_female : tl_male_default;
  const rand = selectedTl[Math.floor(Math.random() * selectedTl.length)];

  const randomTopBorder = borders[Math.floor(Math.random() * borders.length)];
  let randomBottomBorder = borders[Math.floor(Math.random() * borders.length)];
  while(randomBottomBorder === randomTopBorder) { // Ensure different top and bottom borders
    randomBottomBorder = borders[Math.floor(Math.random() * borders.length)];
  }

  const currentTime = moment.tz("Asia/Kolkata");
  const hour = currentTime.format("hh");
  const minute = currentTime.format("mm");
  const ampm = currentTime.format("A");
  const dayOfWeek = currentTime.format("dddd");
  const date = currentTime.format("DD/MM/YYYY");

  // Dynamic Time Formats
  const uniqueTimeFormats = [
    `рдЗрд╕ рдкрд▓ рдХреА рдЦреВрдмрд╕реВрд░рддреА: ${hour}:${minute} ${ampm} - ${dayOfWeek} рдХреЛ!`,
    `рд╕рдордп рдХрд╛ рдЗрд╢рд╛рд░рд╛: ${hour}:${minute} ${ampm} рдкрд░ ${date} рдХреА рдмрд╛рдд рд╣реИред`,
    `рддреЗрд░реА рдпрд╛рджреЛрдВ рдХреЗ рд╕рд╛рде: ${hour}:${minute} ${ampm}, рдЖрдЬ ${dayOfWeek} рд╣реИред`,
    `рдЕрднреА рдХрд╛ рд▓рдореНрд╣рд╛: ${hour}:${minute} ${ampm} - ${date} рдХреА рдкрд╣рдЪрд╛рдиред`,
    `рдзрдбрд╝рдХрдиреЛрдВ рдореЗрдВ рдмрд╕ рдЬрд╛рдП: ${hour}:${minute} ${ampm} рдкрд░, ${dayOfWeek} рдХреА рд░реМрдирдХред`,
    `рдЗрд╕ рдбрд┐рдЬрд┐рдЯрд▓ рджреБрдирд┐рдпрд╛ рдореЗрдВ: ${hour}:${minute} ${ampm} рдкрд░ ${date} рдХрд╛ рд╕рдордпред`,
    `рдЬрд╛рджреВрдИ рдШрдбрд╝реА рдмрддрд╛ рд░рд╣реА рд╣реИ: ${hour}:${minute} ${ampm} ${dayOfWeek} рдХреЛред`,
    `рдкрд▓-рдкрд▓ рдХрд╛ рд╣рд┐рд╕рд╛рдм: ${hour}:${minute} ${ampm} рдХреЛ, ${date} рдХреЗ рджрд┐рдиред`,
    `рддреЗрд░реЗ рд▓рд┐рдП рд╣реА рд░реБрдХрд╛ рд╣реИ: ${hour}:${minute} ${ampm} рдкрд░ ${dayOfWeek} рдХреА рд░рд╛рдд/рд╕реБрдмрд╣ред`,
    `рдпреЗ рд╡рдХрд╝реНрдд рд╣реИ ${hour}:${minute} ${ampm} рдХрд╛, рдЖрдЬ ${dayOfWeek} рд╣реИ!`
  ];

  const randomUniqueTimeText = uniqueTimeFormats[Math.floor(Math.random() * uniqueTimeFormats.length)];

  // --- FONT STYLE APPLICATION (REMOVED FOR COMPATIBILITY) ---
  // The font conversion functions (toBold, toItalic, etc.) have been removed.
  // This ensures that the text appears as standard, readable characters on all devices.
  // If you still want some visual distinction, you can manually add simple Unicode characters
  // or rely on emojis and borders more heavily.

  // Using plain text for maximum compatibility
  const styledName = name; // No fancy font
  const styledRand = rand; // No fancy font
  const styledCredit = "Rudra Stylish"; // No fancy font
  const styledTime = randomUniqueTimeText; // No fancy font
  // --- END FONT STYLE APPLICATION ---

  // --- ADD RANDOM EMOJI TO REPLY AND TIME, GENDER AWARE EMOJI FOR REPLY ---
  const randomEmojiForReply = userIsFemale ? femaleEmojis[Math.floor(Math.random() * femaleEmojis.length)] : generalEmojis[Math.floor(Math.random() * generalEmojis.length)];
  const randomEmojiForCredit = creditEmojis[Math.floor(Math.random() * creditEmojis.length)];
  const randomEmojiForTime = timeEmojis[Math.floor(Math.random() * timeEmojis.length)];
  // --- END ADD RANDOM EMOJI ---

  const msg = {
    body:
      `${randomTopBorder}\n\n` +
      `тЬи Hey тЬи *уАО ${styledName} уАП*\n\n` + // Using markdown for bold if client supports it
      `${randomEmojiForReply} уАО ${styledRand} уАП\n\n` +
      `тАФ ${randomEmojiForCredit} ${styledCredit} ${randomEmojiForCredit}\n\n` +
      `ЁЯХТ ${randomEmojiForTime} ${styledTime}\n\n` +
      `${randomBottomBorder}`
  };

  return api.sendMessage(msg, threadID, messageID);
};

module.exports.run = function({ api, event, client, __GLOBAL }) {
    // Run function is empty for noprefix commands
};
